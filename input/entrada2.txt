typedef struct Pessoa ,
Pessoa;

typedef int inteiro;

typedef inteiro numero;


string frase;

id zop;
j + i 0

typedef string frase;

{
	int a=1, b=2;
}

struct int i ;

var{
	int a=1, b=2;
}

 string frase;

struct pessoa{
	var{int i;}
}

 string joao function int fstart(){return 5;};frase;

 pessoa{
	var{int i;}
}

 string frase;

 pessoa{
	var{int i;}
}

typedef string frase;
	
const{
	int i = 20*8+"jacobina";
	int i[2] = [false,true], j = false;
	int jota = 2*focafunc[jota]*pedro("Joao", 85*3, i[2*focafunc("Joao", 85*3, i[7])]);
	string japa = "Opa gangnangstyle", zoom = "app";
	real i = false,k=true, k[3]=[urubu,sem,asa], l=1;
	int i[2][3]=[[false,true, zip, zop],[biri, flinston],[opa],[eita]], joao=i,false1 =  j;
	//Testanto operaÃ§Ãµes
	int i[2*90/1520] = [false,(2+3)!=(2+3)<7], j = false<=(8*5.2+i[5/4]*jota.ka[21][5+3]);
	real i = 10*3.1+2.7*8.777/15+(128/12.2), k=i[20.5/(12-15)*(-I+20)]||(128&&15)>14, k[3]=[urubu,sem,asa], j=jota;
	int i[2*3][3+2]=[[false,true||ele, zip<=zop, uat&&zap],[biri>flinston, opa-flinston],[-opa*2],[2/(eita)]], joao=-i,false1 =  -(j/2);

//procedure start (){
}

var{
	int i = false, j = true;
	real i = reali, joao = safe;
	int i[2]=[opa,zap];
	int i[2] = [false,true], j = false;
	real i = false,k=true, k[3]=[urubu,sem,asa];
	int i[2][3]=[[false,true, zip, zop],[biri, flinston],[opa],[eita]], joao=i,false1 =  j;

}

 inteiro sftart(){
    //read(a);
    i=10;
    i++;
    i--;
    return a;
}

function int sftart(){
    //read(a);
    i++;
    i--;
    return a;
}

function int sftart(){
    //read(a);
    i--;
    i--;
    return a;
}

function int sftart(){
    //read(a);
    ++i;
    i++;
    i--;
    return a;
}

function int sftart(){
    //read(a);
    --i;
    i++;
    i--;
    return a;
}

procedure fstart(){
    read(a);
    i++;
    i--;
}

procedure start(){
    read(a);
    i++;
    i--;
}